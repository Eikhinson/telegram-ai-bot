import { NextResponse } from 'next/server';

export async function POST(request) {
  try {
    const body = await request.json();
    console.log('Received:', JSON.stringify(body, null, 2));
    
    if (body.message) {
      const chatId = body.message.chat.id;
      const text = body.message.text;
      const userId = body.message.from.id;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
      if (body.message.from.is_bot) {
        return NextResponse.json({ success: true });
      }
      
      let responseText = '';
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
      if (text === '/start') {
        responseText = `ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø NeuromaniaGPT –±–æ—Ç!
        
üé® –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç - —è –æ—Ç–≤–µ—á—É —á–µ—Ä–µ–∑ Claude
üñºÔ∏è –ù–∞–ø–∏—à–∏ "–Ω–∞—Ä–∏—Å—É–π [–æ–ø–∏—Å–∞–Ω–∏–µ]" - —Å–æ–∑–¥–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ FLUX
üíª –ù–∞–ø–∏—à–∏ "–∫–æ–¥ [–∑–∞–¥–∞—á–∞]" - –ø–æ–º–æ–≥—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º

–ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å: "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?"`;
      }
      else if (text && text.toLowerCase().startsWith('–Ω–∞—Ä–∏—Å—É–π')) {
        const prompt = text.slice(7).trim();
        responseText = `üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: "${prompt}"
        
‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...`;
        
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ FLUX API
      }
      else if (text && text.toLowerCase().startsWith('–∫–æ–¥')) {
        const task = text.slice(3).trim();
        responseText = `üíª –ü–æ–º–æ–≥—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º: "${task}"
        
ü§î –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∑–∞–¥–∞—á—É...`;
        
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ –∫ DeepSeek
      }
      else if (text) {
        // –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ Claude
        responseText = `üß† Claude –æ—Ç–≤–µ—á–∞–µ—Ç:

–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${text}"

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç. –°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π AI!`;
      }
      else {
        responseText = 'ü§ñ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—â–µ–Ω–∏—è!';
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç
      const telegramResponse = await fetch(`https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: chatId,
          text: responseText,
          parse_mode: 'HTML'
        })
      });
      
      const result = await telegramResponse.json();
      console.log('Telegram response:', result);
      
      if (!result.ok) {
        console.error('Telegram API error:', result);
      }
    }
    
    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Webhook error:', error);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({ 
    status: 'Webhook is working!',
    bot: '@NeuromaniaGPT_bot',
    timestamp: new Date().toISOString()
  });
}
