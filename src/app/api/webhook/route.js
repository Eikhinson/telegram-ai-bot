import { NextResponse } from 'next/server';

export async function POST(request) {
  try {
    const body = await request.json();
    console.log('Received webhook:', JSON.stringify(body, null, 2));
    
    if (body.message) {
      const chatId = body.message.chat.id;
      const text = body.message.text;
      const fromId = body.message.from.id;
      
      console.log(`Message from user ${fromId} in chat ${chatId}: ${text}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
      if (body.message.from.is_bot) {
        console.log('Ignoring message from bot');
        return NextResponse.json({ success: true });
      }
      
      let responseText = '';
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
      if (text === '/start') {
        responseText = `ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø NeuromaniaGPT –±–æ—Ç!

üé® –û—Ç–ø—Ä–∞–≤—å "–Ω–∞—Ä–∏—Å—É–π –∫–æ—Ç–∞" - —Å–æ–∑–¥–∞–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å - –æ—Ç–≤–µ—á—É —á–µ—Ä–µ–∑ AI
üíª –ù–∞–ø–∏—à–∏ "–∫–æ–¥ python hello" - –ø–æ–º–æ–≥—É —Å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º`;
      }
      else if (text && text.toLowerCase().includes('–Ω–∞—Ä–∏—Å—É–π')) {
        responseText = `üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...
        
‚è≥ –§—É–Ω–∫—Ü–∏—è FLUX —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!`;
      }
      else if (text && text.toLowerCase().includes('–∫–æ–¥')) {
        responseText = `üíª –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–æ–¥...
        
ü§î DeepSeek —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω!`;
      }
      else if (text) {
        responseText = `üß† –ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${text}"

–û—Ç–≤–µ—á–∞—é –∏–∑ —á–∞—Ç–∞ ID: ${chatId}
–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ID: ${fromId}

Claude AI —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω! üöÄ`;
      }
      else {
        responseText = 'ü§ñ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!';
      }
      
      console.log(`Sending response to chat ${chatId}: ${responseText}`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Ç–æ—á–Ω–æ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç
      const telegramUrl = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
      const payload = {
        chat_id: chatId,
        text: responseText,
        reply_to_message_id: body.message.message_id
      };
      
      console.log('Sending to Telegram:', JSON.stringify(payload, null, 2));
      
      const telegramResponse = await fetch(telegramUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      
      const result = await telegramResponse.json();
      console.log('Telegram API response:', JSON.stringify(result, null, 2));
      
      if (!result.ok) {
        console.error('Telegram API error:', result);
        return NextResponse.json({ error: 'Telegram API error', details: result }, { status: 500 });
      }
    }
    
    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Webhook error:', error);
    return NextResponse.json({ error: error.message }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({ 
    status: 'Webhook is working!',
    bot: '@NeuromaniaGPT_bot',
    timestamp: new Date().toISOString()
  });
}
